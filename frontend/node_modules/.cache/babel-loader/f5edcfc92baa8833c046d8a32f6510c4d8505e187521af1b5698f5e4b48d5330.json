{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatInterface(){const[inputText,setInputText]=useState('');const[result,setResult]=useState('');const[isLoading,setIsLoading]=useState(false);const backendUrl=process.env.REACT_APP_BACKEND_URL;// Handle text input change\nconst handleTextChange=e=>{setInputText(e.target.value);};// Handle chat submission and stream the response\nconst handleSubmit=async()=>{if(inputText.trim()){setIsLoading(true);setResult('');// Clear previous result\ntry{const response=await fetch(`${backendUrl}/record/chat`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({content:inputText})});if(!response.ok){throw new Error('Network response was not ok');}const reader=response.body.getReader();const decoder=new TextDecoder();let done=false;let accumulatedResult='';while(!done){const{value,done:readerDone}=await reader.read();done=readerDone;if(value){const chunk=decoder.decode(value,{stream:true});const lines=chunk.split('\\n');lines.forEach(line=>{if(line.startsWith('data:')){const data=line.replace('data: ','').trim();// Check for the end of the stream\nif(data==='[DONE]'){setIsLoading(false);return;}try{// Parse JSON if it's not \"[DONE]\"\nconst parsedData=JSON.parse(data);if(parsedData.response){accumulatedResult+=parsedData.response;setResult(accumulatedResult);}}catch(err){console.error('Error parsing JSON chunk:',err);}}});}}setIsLoading(false);}catch(error){console.error('Error during streaming:',error);setIsLoading(false);setResult('An error occurred. Please try again.');}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chat with Gemma 2:2b\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{value:inputText,onChange:handleTextChange,placeholder:\"Type your message here...\",rows:\"5\",cols:\"50\",disabled:isLoading})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:isLoading,children:isLoading?'Waiting for response...':'Send'}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Response:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{whiteSpace:'pre-wrap',wordWrap:'break-word'},children:result})]})]});}export default ChatInterface;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ChatInterface","inputText","setInputText","result","setResult","isLoading","setIsLoading","backendUrl","process","env","REACT_APP_BACKEND_URL","handleTextChange","e","target","value","handleSubmit","trim","response","fetch","method","headers","body","JSON","stringify","content","ok","Error","reader","getReader","decoder","TextDecoder","done","accumulatedResult","readerDone","read","chunk","decode","stream","lines","split","forEach","line","startsWith","data","replace","parsedData","parse","err","console","error","children","onChange","placeholder","rows","cols","disabled","onClick","style","whiteSpace","wordWrap"],"sources":["/Users/T/Library/Mobile Documents/com~apple~CloudDocs/Washington/cityu/CS628/cs628-hos10-2025-winter-fightforhash/frontend/src/components/chat.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ChatInterface() {\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n\n  // Handle text input change\n  const handleTextChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  // Handle chat submission and stream the response\n  const handleSubmit = async () => {\n    if (inputText.trim()) {\n      setIsLoading(true);\n      setResult(''); // Clear previous result\n\n      try {\n        const response = await fetch(`${backendUrl}/record/chat`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ content: inputText }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n\n        let done = false;\n        let accumulatedResult = '';\n\n        while (!done) {\n          const { value, done: readerDone } = await reader.read();\n          done = readerDone;\n\n          if (value) {\n            const chunk = decoder.decode(value, { stream: true });\n            const lines = chunk.split('\\n');\n\n            lines.forEach((line) => {\n              if (line.startsWith('data:')) {\n                const data = line.replace('data: ', '').trim();\n\n                // Check for the end of the stream\n                if (data === '[DONE]') {\n                  setIsLoading(false);\n                  return;\n                }\n\n                try {\n                  // Parse JSON if it's not \"[DONE]\"\n                  const parsedData = JSON.parse(data);\n                  if (parsedData.response) {\n                    accumulatedResult += parsedData.response;\n                    setResult(accumulatedResult);\n                  }\n                } catch (err) {\n                  console.error('Error parsing JSON chunk:', err);\n                }\n              }\n            });\n          }\n        }\n\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error during streaming:', error);\n        setIsLoading(false);\n        setResult('An error occurred. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat with Gemma 2:2b</h1>\n\n      <div>\n        <textarea\n          value={inputText}\n          onChange={handleTextChange}\n          placeholder=\"Type your message here...\"\n          rows=\"5\"\n          cols=\"50\"\n          disabled={isLoading}\n        />\n      </div>\n\n      <button onClick={handleSubmit} disabled={isLoading}>\n        {isLoading ? 'Waiting for response...' : 'Send'}\n      </button>\n\n      <div>\n        <h2>Response:</h2>\n        <pre style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>{result}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}